module reg_execute_memory (
    input         mem_wrenE, rd_wrenE,
    input  [1:0]  wb_selE,
    input  [2:0]  ld_selE,
    input  [3:0]  byte_enE,
    input  [4:0]  rd_addrE,
    input  [12:0] pc4E,
    input  [31:0] alu_dataE, rs2_dataE,

    input         clk, aclr,

    output        mem_wrenM, rd_wrenM,
    output [1:0]  wb_selM,
    output [2:0]  ld_selM,
    output [3:0]  byte_enM,
    output [4:0]  rd_addrM,
    output [12:0] pc4M,
    output [31:0] alu_dataM, rs2_dataM
);

    logic [92:0] execute_wire, memory_wire;

    assign execute_wire  = {wb_selE, ld_selE, mem_wrenE, byte_enE, rd_wrenE, alu_dataE, rs2_dataE, rd_addrE, pc4E};
    assign memory_wire   = {wb_selM, ld_selM, mem_wrenM, byte_enM, rd_wrenM, alu_dataM, rs2_dataM, rd_addrM, pc4M};

    always_ff @ (posedge clk, negedge aclr)
    if (!aclr) memory_wire = 93'b0;
    else       memory_wire = execute_wire;

endmodule